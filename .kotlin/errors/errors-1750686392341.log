kotlin version: 2.0.0
error message: org.jetbrains.kotlin.backend.common.BackendException: Backend Internal error: Exception during IR lowering
File being compiled: D:/0_Code/2_AndroidStudioProjects/1_Projects/AegisPandora/core/src/androidMain/kotlin/com/mhmmdrdwnsyhx/aegispandora/ui/login/LoginScreen.kt
The root cause java.lang.RuntimeException was thrown at: org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate(FunctionCodegen.kt:50)
	at org.jetbrains.kotlin.backend.common.CodegenUtil.reportBackendException(CodegenUtil.kt:253)
	at org.jetbrains.kotlin.backend.common.CodegenUtil.reportBackendException$default(CodegenUtil.kt:236)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invokeSequential(performByIrFile.kt:65)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invoke(performByIrFile.kt:52)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invoke(performByIrFile.kt:38)
	at org.jetbrains.kotlin.backend.common.phaser.NamedCompilerPhase.phaseBody(CompilerPhase.kt:166)
	at org.jetbrains.kotlin.backend.common.phaser.AbstractNamedCompilerPhase.invoke(CompilerPhase.kt:113)
	at org.jetbrains.kotlin.backend.common.phaser.CompositePhase.invoke(PhaseBuilders.kt:29)
	at org.jetbrains.kotlin.backend.common.phaser.CompositePhase.invoke(PhaseBuilders.kt:16)
	at org.jetbrains.kotlin.backend.common.phaser.NamedCompilerPhase.phaseBody(CompilerPhase.kt:166)
	at org.jetbrains.kotlin.backend.common.phaser.AbstractNamedCompilerPhase.invoke(CompilerPhase.kt:113)
	at org.jetbrains.kotlin.backend.common.phaser.CompilerPhaseKt.invokeToplevel(CompilerPhase.kt:62)
	at org.jetbrains.kotlin.backend.jvm.JvmIrCodegenFactory.invokeCodegen(JvmIrCodegenFactory.kt:371)
	at org.jetbrains.kotlin.codegen.CodegenFactory.generateModule(CodegenFactory.kt:47)
	at org.jetbrains.kotlin.backend.jvm.JvmIrCodegenFactory.generateModuleInFrontendIRMode(JvmIrCodegenFactory.kt:433)
	at org.jetbrains.kotlin.cli.jvm.compiler.pipeline.JvmCompilerPipelineKt.generateCodeFromIr(jvmCompilerPipeline.kt:241)
	at org.jetbrains.kotlin.cli.jvm.compiler.pipeline.JvmCompilerPipelineKt.compileModulesUsingFrontendIrAndLightTree(jvmCompilerPipeline.kt:140)
	at org.jetbrains.kotlin.cli.jvm.K2JVMCompiler.doExecute(K2JVMCompiler.kt:155)
	at org.jetbrains.kotlin.cli.jvm.K2JVMCompiler.doExecute(K2JVMCompiler.kt:50)
	at org.jetbrains.kotlin.cli.common.CLICompiler.execImpl(CLICompiler.kt:104)
	at org.jetbrains.kotlin.cli.common.CLICompiler.execImpl(CLICompiler.kt:48)
	at org.jetbrains.kotlin.cli.common.CLITool.exec(CLITool.kt:101)
	at org.jetbrains.kotlin.incremental.IncrementalJvmCompilerRunner.runCompiler(IncrementalJvmCompilerRunner.kt:453)
	at org.jetbrains.kotlin.incremental.IncrementalJvmCompilerRunner.runCompiler(IncrementalJvmCompilerRunner.kt:62)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.doCompile(IncrementalCompilerRunner.kt:506)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compileImpl(IncrementalCompilerRunner.kt:423)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compileNonIncrementally(IncrementalCompilerRunner.kt:301)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compile(IncrementalCompilerRunner.kt:129)
	at org.jetbrains.kotlin.daemon.CompileServiceImplBase.execIncrementalCompiler(CompileServiceImpl.kt:676)
	at org.jetbrains.kotlin.daemon.CompileServiceImplBase.access$execIncrementalCompiler(CompileServiceImpl.kt:92)
	at org.jetbrains.kotlin.daemon.CompileServiceImpl.compile(CompileServiceImpl.kt:1661)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(Unknown Source)
	at java.rmi/sun.rmi.transport.Transport$1.run(Unknown Source)
	at java.rmi/sun.rmi.transport.Transport$1.run(Unknown Source)
	at java.base/java.security.AccessController.doPrivileged(Unknown Source)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(Unknown Source)
	at java.base/java.security.AccessController.doPrivileged(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
Caused by: java.lang.RuntimeException: Exception while generating code for:
FUN name:LoginScreen visibility:public modality:FINAL <> (onPinEntered:kotlin.Function1<kotlin.String, kotlin.Unit>) returnType:kotlin.Unit
  annotations:
    Composable
  VALUE_PARAMETER name:onPinEntered index:0 type:kotlin.Function1<kotlin.String, kotlin.Unit>
  BLOCK_BODY
    VAR PROPERTY_DELEGATE name:pinInput$delegate type:androidx.compose.runtime.MutableState<kotlin.String> [val]
      CALL 'public final fun remember <T> (calculation: @[DisallowComposableCalls] kotlin.Function0<T of androidx.compose.runtime.ComposablesKt.remember>): T of androidx.compose.runtime.ComposablesKt.remember [inline] declared in androidx.compose.runtime.ComposablesKt' type=androidx.compose.runtime.MutableState<kotlin.String> origin=null
        <T>: androidx.compose.runtime.MutableState<kotlin.String>
        calculation: BLOCK type=kotlin.Function0<androidx.compose.runtime.MutableState<kotlin.String>> origin=LAMBDA
          COMPOSITE type=kotlin.Unit origin=null
          FUNCTION_REFERENCE 'private final fun LoginScreen$lambda$0 (): androidx.compose.runtime.MutableState<kotlin.String> declared in <root>.LoginScreenKt' type=kotlin.Function0<androidx.compose.runtime.MutableState<kotlin.String>> origin=INLINE_LAMBDA reflectionTarget=null
    VAR name:gradient type:androidx.compose.ui.graphics.Brush [val]
      CALL 'public final fun linearGradient-mHitzGk$default ($this: androidx.compose.ui.graphics.Brush.Companion, colors: kotlin.collections.List<androidx.compose.ui.graphics.Color>, start: androidx.compose.ui.geometry.Offset, end: androidx.compose.ui.geometry.Offset, tileMode: androidx.compose.ui.graphics.TileMode, $mask0: kotlin.Int, $handler: kotlin.Any?): androidx.compose.ui.graphics.Brush declared in androidx.compose.ui.graphics.Brush.Companion' type=androidx.compose.ui.graphics.Brush origin=DEFAULT_DISPATCH_CALL
        $this: GET_FIELD 'FIELD FIELD_FOR_OBJECT_INSTANCE name:Companion type:androidx.compose.ui.graphics.Brush.Companion visibility:public [final,static]' type=androidx.compose.ui.graphics.Brush.Companion origin=null
        colors: CALL 'public final fun listOf <T> (vararg elements: T of kotlin.collections.CollectionsKt.listOf): kotlin.collections.List<T of kotlin.collections.CollectionsKt.listOf> declared in kotlin.collections.CollectionsKt' type=kotlin.collections.List<androidx.compose.ui.graphics.Color> origin=null
          <T>: androidx.compose.ui.graphics.Color
          elements: BLOCK type=kotlin.Array<out androidx.compose.ui.graphics.Color> origin=null
            VAR IR_TEMPORARY_VARIABLE name:tmp0 type:kotlin.Array<out androidx.compose.ui.graphics.Color> [val]
              CALL 'public final fun arrayOfNulls <T> (size: kotlin.Int): kotlin.Array<T of kotlin.arrayOfNulls?> declared in kotlin' type=kotlin.Array<out androidx.compose.ui.graphics.Color> origin=null
                <T>: androidx.compose.ui.graphics.Color
                size: CONST Int type=kotlin.Int value=2
            CALL 'public final fun set (index: kotlin.Int, value: T of kotlin.Array): kotlin.Unit [operator] declared in kotlin.Array' type=kotlin.Unit origin=null
              $this: GET_VAR 'val tmp0: kotlin.Array<out androidx.compose.ui.graphics.Color> [val] declared in <root>.LoginScreenKt.LoginScreen' type=kotlin.Array<out androidx.compose.ui.graphics.Color> origin=null
              index: CONST Int type=kotlin.Int value=0
              value: CALL 'public final fun Color (color: kotlin.Long): androidx.compose.ui.graphics.Color declared in androidx.compose.ui.graphics.ColorKt' type=androidx.compose.ui.graphics.Color origin=null
                color: CONST Long type=kotlin.Long value=4294944550
            CALL 'public final fun set (index: kotlin.Int, value: T of kotlin.Array): kotlin.Unit [operator] declared in kotlin.Array' type=kotlin.Unit origin=null
              $this: GET_VAR 'val tmp0: kotlin.Array<out androidx.compose.ui.graphics.Color> [val] declared in <root>.LoginScreenKt.LoginScreen' type=kotlin.Array<out androidx.compose.ui.graphics.Color> origin=null
              index: CONST Int type=kotlin.Int value=1
              value: CALL 'public final fun Color (color: kotlin.Long): androidx.compose.ui.graphics.Color declared in androidx.compose.ui.graphics.ColorKt' type=androidx.compose.ui.graphics.Color origin=null
                color: CONST Long type=kotlin.Long value=4293467747
            GET_VAR 'val tmp0: kotlin.Array<out androidx.compose.ui.graphics.Color> [val] declared in <root>.LoginScreenKt.LoginScreen' type=kotlin.Array<out androidx.compose.ui.graphics.Color> origin=null
        start: COMPOSITE type=androidx.compose.ui.geometry.Offset origin=DEFAULT_VALUE
          CALL 'public final fun <unsafe-coerce> <T, R> (v: T of kotlin.jvm.internal.<unsafe-coerce>): R of kotlin.jvm.internal.<unsafe-coerce> declared in kotlin.jvm.internal' type=androidx.compose.ui.geometry.Offset origin=null
            <T>: kotlin.Long
            <R>: androidx.compose.ui.geometry.Offset
            v: CONST Long type=kotlin.Long value=0
        end: COMPOSITE type=androidx.compose.ui.geometry.Offset origin=DEFAULT_VALUE
          CALL 'public final fun <unsafe-coerce> <T, R> (v: T of kotlin.jvm.internal.<unsafe-coerce>): R of kotlin.jvm.internal.<unsafe-coerce> declared in kotlin.jvm.internal' type=androidx.compose.ui.geometry.Offset origin=null
            <T>: kotlin.Long
            <R>: androidx.compose.ui.geometry.Offset
            v: CONST Long type=kotlin.Long value=0
        tileMode: COMPOSITE type=androidx.compose.ui.graphics.TileMode origin=DEFAULT_VALUE
          CALL 'public final fun <unsafe-coerce> <T, R> (v: T of kotlin.jvm.internal.<unsafe-coerce>): R of kotlin.jvm.internal.<unsafe-coerce> declared in kotlin.jvm.internal' type=androidx.compose.ui.graphics.TileMode origin=null
            <T>: kotlin.Int
            <R>: androidx.compose.ui.graphics.TileMode
            v: CONST Int type=kotlin.Int value=0
        $mask0: CONST Int type=kotlin.Int value=14
        $handler: CONST Null type=kotlin.Any? value=null
    BLOCK type=kotlin.Unit origin=ARGUMENTS_REORDERING_FOR_CALL
      VAR IR_TEMPORARY_VARIABLE name:tmp9_modifier type:androidx.compose.ui.Modifier [val]
        CALL 'public final fun background-bw27NRU$default (color: androidx.compose.ui.graphics.Color, shape: androidx.compose.ui.graphics.Shape?, $mask0: kotlin.Int, $handler: kotlin.Any?): androidx.compose.ui.Modifier declared in androidx.compose.foundation.BackgroundKt' type=androidx.compose.ui.Modifier origin=DEFAULT_DISPATCH_CALL
          $receiver: CALL 'public final fun fillMaxSize$default (fraction: kotlin.Float, $mask0: kotlin.Int, $handler: kotlin.Any?): androidx.compose.ui.Modifier declared in androidx.compose.foundation.layout.SizeKt' type=androidx.compose.ui.Modifier origin=DEFAULT_DISPATCH_CALL
            $receiver: GET_FIELD 'FIELD FIELD_FOR_OBJECT_INSTANCE name:Companion type:androidx.compose.ui.Modifier.Companion visibility:public [final,static]' type=androidx.compose.ui.Modifier.Companion origin=null
            fraction: COMPOSITE type=kotlin.Float origin=DEFAULT_VALUE
              CONST Float type=kotlin.Float value=0.0
            $mask0: CONST Int type=kotlin.Int value=1
            $handler: CONST Null type=kotlin.Any? value=null
          color: CALL 'public final fun Color (color: kotlin.Long): androidx.compose.ui.graphics.Color declared in androidx.compose.ui.graphics.ColorKt' type=androidx.compose.ui.graphics.Color origin=null
            color: CONST Long type=kotlin.Long value=4281281349
          shape: COMPOSITE type=androidx.compose.ui.graphics.Shape? origin=DEFAULT_VALUE
            CONST Null type=androidx.compose.ui.graphics.Shape? value=null
          $mask0: CONST Int type=kotlin.Int value=2
          $handler: CONST Null type=kotlin.Any? value=null
      VAR IR_TEMPORARY_VARIABLE name:tmp10_horizontalAlignment type:androidx.compose.ui.Alignment.Horizontal [val]
        CALL 'public final fun <get-CenterHorizontally> (): androidx.compose.ui.Alignment.Horizontal declared in androidx.compose.ui.Alignment.Companion' type=androidx.compose.ui.Alignment.Horizontal origin=GET_PROPERTY
          $this: GET_FIELD 'FIELD FIELD_FOR_OBJECT_INSTANCE name:Companion type:androidx.compose.ui.Alignment.Companion visibility:public [final,static]' type=androidx.compose.ui.Alignment.Companion origin=null
      VAR IR_TEMPORARY_VARIABLE name:tmp11_verticalArrangement type:androidx.compose.foundation.layout.Arrangement.HorizontalOrVertical [val]
        CALL 'public final fun <get-SpaceEvenly> (): androidx.compose.foundation.layout.Arrangement.HorizontalOrVertical declared in androidx.compose.foundation.layout.Arrangement' type=androidx.compose.foundation.layout.Arrangement.HorizontalOrVertical origin=GET_PROPERTY
          $this: GET_FIELD 'FIELD FIELD_FOR_OBJECT_INSTANCE name:INSTANCE type:androidx.compose.foundation.layout.Arrangement visibility:public [final,static]' type=androidx.compose.foundation.layout.Arrangement origin=null
      CALL 'public final fun Column (modifier: androidx.compose.ui.Modifier, verticalArrangement: androidx.compose.foundation.layout.Arrangement.Vertical, horizontalAlignment: androidx.compose.ui.Alignment.Horizontal, content: @[Composable] @[ExtensionFunctionType] kotlin.Function1<androidx.compose.foundation.layout.ColumnScope, kotlin.Unit>): kotlin.Unit [inline] declared in androidx.compose.foundation.layout.ColumnKt' type=kotlin.Unit origin=null
        modifier: GET_VAR 'val tmp9_modifier: androidx.compose.ui.Modifier [val] declared in <root>.LoginScreenKt.LoginScreen' type=androidx.compose.ui.Modifier origin=null
        verticalArrangement: GET_VAR 'val tmp11_verticalArrangement: androidx.compose.foundation.layout.Arrangement.HorizontalOrVertical [val] declared in <root>.LoginScreenKt.LoginScreen' type=androidx.compose.foundation.layout.Arrangement.HorizontalOrVertical origin=null
        horizontalAlignment: GET_VAR 'val tmp10_horizontalAlignment: androidx.compose.ui.Alignment.Horizontal [val] declared in <root>.LoginScreenKt.LoginScreen' type=androidx.compose.ui.Alignment.Horizontal origin=null
        content: BLOCK type=@[ExtensionFunctionType] kotlin.Function1<androidx.compose.foundation.layout.ColumnScope, kotlin.Unit> origin=LAMBDA
          COMPOSITE type=kotlin.Unit origin=null
          FUNCTION_REFERENCE 'private final fun LoginScreen$lambda$14 ($pinInput$delegate: androidx.compose.runtime.MutableState<kotlin.String>, $gradient: androidx.compose.ui.graphics.Brush, $onPinEntered: kotlin.Function1<kotlin.String, kotlin.Unit>): kotlin.Unit declared in <root>.LoginScreenKt' type=@[ExtensionFunctionType] kotlin.Function1<androidx.compose.foundation.layout.ColumnScope, kotlin.Unit> origin=INLINE_LAMBDA reflectionTarget=null
            $pinInput$delegate: GET_VAR 'val pinInput$delegate: androidx.compose.runtime.MutableState<kotlin.String> [val] declared in <root>.LoginScreenKt.LoginScreen' type=androidx.compose.runtime.MutableState<kotlin.String> origin=null
            $gradient: GET_VAR 'val gradient: androidx.compose.ui.graphics.Brush [val] declared in <root>.LoginScreenKt.LoginScreen' type=androidx.compose.ui.graphics.Brush origin=null
            $onPinEntered: GET_VAR 'onPinEntered: kotlin.Function1<kotlin.String, kotlin.Unit> declared in <root>.LoginScreenKt.LoginScreen' type=kotlin.Function1<kotlin.String, kotlin.Unit> origin=null

	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate(FunctionCodegen.kt:50)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate$default(FunctionCodegen.kt:42)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generateMethodNode(ClassCodegen.kt:385)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generateMethod(ClassCodegen.kt:402)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generate(ClassCodegen.kt:169)
	at org.jetbrains.kotlin.backend.jvm.FileCodegen.lower(JvmPhases.kt:41)
	at org.jetbrains.kotlin.backend.common.phaser.PhaseBuildersKt.makeIrFilePhase$lambda$5(PhaseBuilders.kt:114)
	at org.jetbrains.kotlin.backend.common.phaser.PhaseBuildersKt$createSimpleNamedCompilerPhase$1.phaseBody(PhaseBuilders.kt:71)
	at org.jetbrains.kotlin.backend.common.phaser.SimpleNamedCompilerPhase.phaseBody(CompilerPhase.kt:226)
	at org.jetbrains.kotlin.backend.common.phaser.AbstractNamedCompilerPhase.invoke(CompilerPhase.kt:113)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invokeSequential(performByIrFile.kt:62)
	... 43 more
Caused by: org.jetbrains.kotlin.codegen.CompilationException: Back-end (JVM) Internal error: Couldn't inline method call: CALL 'public final fun remember <T> (calculation: @[DisallowComposableCalls] kotlin.Function0<T of androidx.compose.runtime.ComposablesKt.remember>): T of androidx.compose.runtime.ComposablesKt.remember [inline] declared in androidx.compose.runtime.ComposablesKt' type=androidx.compose.runtime.MutableState<kotlin.String> origin=null
Method: null
File is unknown
The root cause java.lang.IllegalStateException was thrown at: org.jetbrains.kotlin.codegen.inline.SourceCompilerForInlineKt.getMethodNode(SourceCompilerForInline.kt:118)
	at org.jetbrains.kotlin.codegen.inline.InlineCodegen.performInline(InlineCodegen.kt:65)
	at org.jetbrains.kotlin.backend.jvm.codegen.IrInlineCodegen.genInlineCall(IrInlineCodegen.kt:162)
	at org.jetbrains.kotlin.backend.jvm.codegen.IrInlineCallGenerator.genCall(IrInlineCallGenerator.kt:36)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitCall(ExpressionCodegen.kt:647)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitCall(ExpressionCodegen.kt:137)
	at org.jetbrains.kotlin.ir.expressions.IrCall.accept(IrCall.kt:24)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitVariable(ExpressionCodegen.kt:784)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitVariable(ExpressionCodegen.kt:137)
	at org.jetbrains.kotlin.ir.declarations.IrVariable.accept(IrVariable.kt:36)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitStatementContainer(ExpressionCodegen.kt:573)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitBlockBody(ExpressionCodegen.kt:578)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitBlockBody(ExpressionCodegen.kt:137)
	at org.jetbrains.kotlin.ir.expressions.IrBlockBody.accept(IrBlockBody.kt:20)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.generate(ExpressionCodegen.kt:239)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.doGenerate(FunctionCodegen.kt:121)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate(FunctionCodegen.kt:46)
	... 53 more
Caused by: java.lang.IllegalStateException: couldn't find inline method Landroidx/compose/runtime/ComposablesKt;.remember(Lkotlin/jvm/functions/Function0;)Ljava/lang/Object;
	at org.jetbrains.kotlin.codegen.inline.SourceCompilerForInlineKt.getMethodNode(SourceCompilerForInline.kt:118)
	at org.jetbrains.kotlin.codegen.inline.SourceCompilerForInlineKt.loadCompiledInlineFunction(SourceCompilerForInline.kt:96)
	at org.jetbrains.kotlin.backend.jvm.codegen.IrSourceCompilerForInline.compileInlineFunction(IrSourceCompilerForInline.kt:91)
	at org.jetbrains.kotlin.codegen.inline.InlineCodegen.compileInline(InlineCodegen.kt:43)
	at org.jetbrains.kotlin.codegen.inline.InlineCodegen.performInline(InlineCodegen.kt:51)
	... 68 more


